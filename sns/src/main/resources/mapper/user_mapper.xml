<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.project.my.module.userRole.repository.UserRepository">
    <sql id="fullColumn">
        userName, 
        userGender,
        userNickName,
        userEmail,
        userPwd,
        userPN,
        userSchool,
        userAddress,
        userSocial,
        userSocialid,
        emailHash,
        emailcertification,
        userImage,
        userRegDate,
        userAd,
        userRegTime,
        userInfoType,
        role
    </sql>
    <!-- 유저 아이디(이메일)를 통해 모든 회원정보 가져오기 -->
    <select id="findByUserId" resultType="com.project.my.module.userRole.entity.UserInfoEntity"> 
        SELECT <include refid="fullColumn"/>
        FROM userinfo
        WHERE userEmail = #{userEmail}
    </select>
    <!-- 유저 이메일 중복 검사 -->
    <select id="userEmailChk" resultType="int">
        SELECT COUNT(*) 
        FROM userinfo
        WHERE userEmail = #{userEmail}
    </select> 
      <!-- 유저 휴대폰 중복 검사 -->
    <select id="userPhoneNumChk" resultType="int">
        SELECT COUNT(*) 
        FROM userinfo
        WHERE userPN = #{userPhoneNum}
    </select> 
    <!-- 일반 회원가입 정보 INSERT -->
    <insert id="insertMember" parameterType="map">
        INSERT INTO userinfo(<include refid="fullColumn"/>)
        VALUES(
                #{userName},
                #{userGender},
                #{userNickName},
                #{userEmail},
                #{userPwd},
                #{userPN},
                '-',
                '-',
                '-',
                '-',
                #{emailHash},
                0,
                'images/profile.svg',
                NOW(),
                #{userAd},
                NOW(),
                '일반',
                'USER'
              )
    </insert>
    <!-- 이메일 해쉬값으로 이메일 찾기 -->
    <select id="getUserEmail" resultType="String">
        SELECT userEmail
        FROM userinfo
        WHERE emailHash = #{code}
    </select>   
    <!-- 이메일 검증하기 -->
    <update id="setEmailcertification">
        UPDATE userinfo
        SET emailcertification = 1
        WHERE userEmail = #{userEmail}
    </update>
</mapper>


